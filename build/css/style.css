html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
.advs-1 {
  background-image: url(../images/sprite.png);
  background-position: 0px 0px;
  width: 67px;
  height: 40px; }

.advs-2 {
  background-image: url(../images/sprite.png);
  background-position: 0px -45px;
  width: 45px;
  height: 45px; }

.advs-3 {
  background-image: url(../images/sprite.png);
  background-position: 0px -95px;
  width: 44px;
  height: 40px; }

.advs-4 {
  background-image: url(../images/sprite.png);
  background-position: 0px -140px;
  width: 38px;
  height: 41px; }

.advs-5 {
  background-image: url(../images/sprite.png);
  background-position: 0px -186px;
  width: 44px;
  height: 42px; }

.blog-icon {
  background-image: url(../images/sprite.png);
  background-position: 0px -233px;
  width: 37px;
  height: 37px; }

.btn-up {
  background-image: url(../images/sprite.png);
  background-position: 0px -275px;
  width: 9px;
  height: 5px; }

.fb {
  background-image: url(../images/sprite.png);
  background-position: 0px -285px;
  width: 25px;
  height: 25px; }

.forum-icon {
  background-image: url(../images/sprite.png);
  background-position: 0px -315px;
  width: 37px;
  height: 37px; }

.menu_mobail-active {
  background-image: url(../images/sprite.png);
  background-position: 0px -357px;
  width: 23px;
  height: 23px; }

.menu_mobail {
  background-image: url(../images/sprite.png);
  background-position: 0px -385px;
  width: 29px;
  height: 19px; }

.ok {
  background-image: url(../images/sprite.png);
  background-position: 0px -409px;
  width: 25px;
  height: 25px; }

.search-icon {
  background-image: url(../images/sprite.png);
  background-position: 0px -439px;
  width: 17px;
  height: 17px; }

.top-menu-mob-hover {
  background-image: url(../images/sprite.png);
  background-position: 0px -461px;
  width: 14px;
  height: 13px; }

.top-menu-mob {
  background-image: url(../images/sprite.png);
  background-position: 0px -479px;
  width: 17px;
  height: 14px; }

.vk {
  background-image: url(../images/sprite.png);
  background-position: 0px -498px;
  width: 24px;
  height: 25px; }

.your-cart-icon {
  background-image: url(../images/sprite.png);
  background-position: 0px -528px;
  width: 20px;
  height: 19px; }

/**
 * modified version of eric meyer's reset 2.0
 * http://meyerweb.com/eric/tools/css/reset/
 */
/**
 * basic reset
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, main,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/**
 * HTML5 display-role reset for older browsers
 */
article, aside, details, figcaption, figure,
footer, header, menu, nav, section,
main, summary {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/**
 * modified version of normalize.css 3.0.2
 * http://necolas.github.io/normalize.css/
 */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

/**
 * HTML5 display definitions
 * =============================================================================
 */
/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/**
 * Links
 * =============================================================================
 */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/**
 * Text-level semantics
 * =============================================================================
 */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * 1. Address styling not present in Safari and Chrome.
 * 2. Set previously resetted italic font-style
 */
dfn,
i, em {
  font-style: italic; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/**
 * Embedded content
 * =============================================================================
 */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/**
 * Grouping content
 * =============================================================================
 */
/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace; }

/**
 * Forms
 * =============================================================================
 */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  padding: 0; }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

html {
  font-size: 13px; }

body {
  color: #4c4c4c;
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-family: 'Open Sans', sans-serif;
  line-height: 18px; }

h1 {
  font-size: 2.76923rem; }

h2 {
  font-size: 1.84615rem; }

h3 {
  font-size: 1.69231rem; }

h4 {
  font-size: 1.38462rem; }

h5 {
  font-size: 1.07692rem; }

h6 {
  font-size: 0.92308rem; }

i {
  display: inline-block; }

.left {
  float: left; }

.right {
  float: right; }

.cr {
  float: none;
  clear: both;
  margin: 0;
  padding: 0;
  font-size: 0.1px; }

.both:after {
  clear: both;
  content: "";
  display: block;
  float: none;
  margin: 0;
  padding: 0; }

.container {
  margin: 0 auto;
  max-width: 1200px; }

.btn {
  display: inline-block;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-transition: all .2s ease;
          transition: all .2s ease;
  border: 1px solid #000;
  border-radius: 5px; }
  .btn-lg {
    width: 180px;
    padding: 18px 0; }
  .btn-md {
    width: 150px;
    padding: 15px 0; }
  .btn-sm {
    width: 120px;
    padding: 12px 0; }
  .btn-xs {
    width: 100px;
    padding: 10px 0; }

.footer {
  background-color: #f3f3f3;
  padding: 0 0 18px; }

.footer-logo {
  width: 30%;
  padding: 10px 0 0; }
  .footer-logo .logo__text {
    margin: 0; }

.forum-col {
  display: inline-block;
  text-align: center;
  vertical-align: middle; }
  .forum-col i {
    vertical-align: middle; }

.link-forum {
  padding: 6px 0 23px; }
  .link-forum__link {
    color: #6d6d6d;
    font-size: 1.07692rem;
    text-decoration: none;
    display: inline-block;
    padding: 0 10px; }

.social-netw__item {
  display: inline-block;
  vertical-align: middle; }
  .social-netw__item-name {
    padding: 0 15px 0 0; }

.social-netw a {
  display: inline-block;
  vertical-align: middle;
  margin: 0 3px 0 0; }

.footer-nav {
  width: 70%;
  padding: 24px 0 0 6%; }

.footer-menu {
  float: left;
  width: 25%; }

.footer-title {
  font-size: 0.84615rem;
  text-transform: uppercase;
  color: #535353;
  font-weight: bold; }

.footer-list_tar {
  text-align: right; }

.footer-list__link {
  font-size: 1rem;
  color: #6d6d6d;
  text-decoration: none;
  display: inline-block;
  padding: 2px 0; }
  .footer-list__link_oran {
    font-size: 0.92308rem;
    color: #fb4711; }
  .footer-list__link:hover {
    text-decoration: underline; }

.footer-list__phones {
  display: block;
  font-size: 1.38462rem;
  color: #4c4c4c; }

.footer-list__pho-title {
  display: block;
  font-size: 0.92308rem;
  color: #6d6d6d;
  padding: 0 0 13px; }

.box-line {
  border-top: 1px solid #dddddd;
  padding: 20px 0; }

.h2 {
  text-align: center;
  color: #4c4c4c; }

.recom-list {
  text-align: center;
  padding: 29px 0 15px; }
  .recom-list__item {
    display: inline-block;
    width: 167px; }
  .recom-list__text {
    display: block;
    font-size: 1rem; }
  .recom-list__sum {
    display: block;
    font-size: 1.38462rem;
    font-weight: bold;
    color: #fb511e;
    padding: 8px 0 0; }

.manufa-list {
  text-align: center;
  padding: 58px 0 0; }
  .manufa-list__item {
    display: inline-block;
    text-align: center;
    width: 195px; }

.manufa-baners {
  padding: 49px 0 21px; }
  .manufa-baners__item {
    display: inline-block;
    vertical-align: top;
    width: 200px; }
    .manufa-baners__item-big {
      width: 380px; }
  .manufa-baners__link {
    display: inline-block;
    overflow: hidden;
    height: 371px; }
    .manufa-baners__link img {
      height: 371px; }
    .manufa-baners__link-min {
      height: 183px; }
      .manufa-baners__link-min img {
        height: 183px; }
    .manufa-baners__link:hover .manufa-baners__img {
      -webkit-transform: scale(1.1, 1.1);
              transform: scale(1.1, 1.1);
      -webkit-transition: all, 0.5s, ease;
              transition: all, 0.5s, ease; }
  .manufa-baners__img {
    -webkit-transition: all, 0.5s, ease;
            transition: all, 0.5s, ease;
    width: 100%; }

.news-list {
  text-align: center;
  padding: 22px 0 16px; }
  .news-list__item {
    display: inline-block;
    text-align: left;
    padding: 0 13px 0 0;
    width: 235px; }
    .news-list__item:last-child {
      padding: 0; }
  .news-list__date {
    display: block;
    font-size: 0.92308rem;
    color: #7e7e7e;
    padding: 5px 0 0; }
  .news-list__text {
    display: block;
    color: #4c4c4c;
    font-size: 1rem; }

.box-text {
  padding: 25px 0; }
  .box-text .h2 {
    padding: 0 0 20px; }
  .box-text h3 {
    padding: 20px 0; }
  .box-text p {
    padding: 15px 0; }

.list-initial {
  list-style: initial;
  padding: 0 0 0 20px; }

.br-xs {
  display: none; }

@media screen and (max-width: 1199px) {
  .container {
    max-width: 940px; }
  .hidden-lg {
    display: none !important; }
  .baner__item {
    width: 36%; }
    .baner__item img {
      width: 100%; }
  .baner__item-pn {
    width: 64%; }
  .advantages__item {
    width: 180px; }
  .manufa-baners__item {
    width: 180px; }
  .manufa-baners__item-big {
    width: 375px; }
  .news-list__item {
    width: 230px; }
  .manufa-baners__link {
    height: 340px; }
    .manufa-baners__link img {
      height: 340px; }
  .manufa-baners__link-min {
    height: 168px; }
    .manufa-baners__link-min img {
      height: 168px; }
  .footer-logo {
    width: 35%; }
  .footer-nav {
    width: 65%;
    padding: 24px 0 0 1%; } }

@media screen and (max-width: 992px) {
  .container {
    max-width: 720px;
    position: relative; }
  .hidden-md {
    display: none !important; }
  .js-menu {
    display: inline-block; }
  .top-menu {
    display: none;
    width: 40%;
    margin: 30px 0 0; }
    .top-menu__item {
      display: block;
      padding: 0; }
  .form-site-search {
    position: absolute;
    top: 0;
    right: 0; }
  .menu {
    padding: 10px 0;
    width: 100%;
    display: none; }
    .menu__item {
      display: block;
      float: none; }
    .menu__link {
      display: block;
      padding: 10px; }
  .menu-up {
    display: none; }
  .advantages__item {
    width: 130px;
    vertical-align: top; }
  .menu_mobail,
  .menu_mobail-active {
    display: inline-block; }
  .manufa-baners__item {
    width: 169px; }
  .manufa-baners__item-big {
    width: 375px; }
  .news-list__item {
    width: 230px; }
  .manufa-baners__link {
    height: 310px; }
    .manufa-baners__link img {
      height: 310px; }
  .manufa-baners__link-min {
    height: 153px; }
    .manufa-baners__link-min img {
      height: 153px; }
  .box-text .h2 {
    padding: 0;
    line-height: 25px; }
  .footer-logo {
    width: 50%;
    margin: 0 auto;
    float: none; }
  .footer-nav {
    width: 100%;
    float: none;
    padding: 24px 0 0; } }

@media screen and (max-width: 768px) {
  .container {
    max-width: 576px; }
  .hidden-sm {
    display: none !important; }
  .hidden-sm-b {
    display: block !important; }
  .hidden-sm-ib {
    display: inline-block !important; }
  .logo__link {
    display: block; }
  .phones__item {
    display: block;
    padding: 0 0 10px 14px; }
  .advantages__item {
    width: 110px; }
  .recom-list__item {
    padding: 0 0 20px; }
  .manufa-baners__item {
    width: 183px; }
  .manufa-baners__item-big {
    width: 375px; }
  .news-list__item {
    width: 230px; }
  .manufa-baners__link {
    height: 310px; }
    .manufa-baners__link img {
      height: 310px; }
  .manufa-baners__link-min {
    height: 153px; }
    .manufa-baners__link-min img {
      height: 153px; }
  .news-list__item {
    padding: 0 13px 20px 0; }
  .footer-logo {
    width: auto;
    max-width: 350px; }
  .footer-menu {
    width: 50%;
    padding: 10px 0; }
  .footer-list_tar {
    text-align: left; } }

@media screen and (max-width: 544px) {
  .container {
    max-width: 100%;
    min-width: 320px;
    padding: 0 15px; }
  .hidden-xs {
    display: none !important; }
  .cabinet-top {
    width: 95%;
    margin: 0 -15px 0 0; }
  .btn-cabinet__btn {
    padding: 0 15px 0 0; }
  .btn-cabinet {
    width: 50%; }
  .your-cart {
    padding: 6px 10px 7px; }
  .js-menu {
    left: 8px; }
  .logo {
    max-width: 100%;
    text-align: center;
    float: none; }
  .phones {
    width: 100%;
    float: none;
    text-align: center; }
    .phones__item {
      text-align: center; }
  .form-site-search {
    right: 15px; }
  .site-search {
    width: 240px; }
    .site-search__input {
      width: 140px; }
  .baner__item {
    width: 100%;
    padding: 0 0 6px; }
    .baner__item-bn {
      width: 100%; }
  .advantages__item {
    width: 100%;
    padding: 0 0 20px; }
  .manufa-baners__item {
    width: 47%; }
  .manufa-baners__item-big {
    width: 100%; }
  .manufa-baners__link-min {
    height: auto;
    width: 47%; }
    .manufa-baners__link-min img {
      height: auto; }
  .manufa-baners__link {
    height: auto; }
    .manufa-baners__link-mob {
      width: 100%; }
    .manufa-baners__link img {
      height: auto; }
  .footer-logo {
    text-align: center; }
  .footer-list__phones {
    font-size: 1.15385rem; }
  .footer-list__pho-title {
    padding: 0 0 6px; }
  .forum-col {
    margin: 0 0 5px; }
  .br-xs {
    display: block; }
  .link-forum {
    padding: 5px 0; } }

/*# sourceMappingURL=data:application/json;base64, */
